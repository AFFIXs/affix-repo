"""
repy_network_api_wrapper.r2py

This implements a class to represent the original Repy network call 
definitions. It defines network calls like an Affix component (so 
another component can point its methods to ours) but lacks the stack 
manipulation methods (as it is destined to sit at the bottom of an
Affix stack).

This design was chosen so that Affix components need not worry 
(i.e. special-case) whether or not the Repy API or further Affix 
components are below them.

Trying to access the stack manipulation methods currently raises an 
AttributeError ("instance has no attribute '...'"). I'm not sure this 
is how the final implementation should work.
"""

class RepyNetworkAPIWrapper:
  def __init__(self, next_affix=None):
    """
    The constructor. Must not be called with a next_affix, as this 
    would imply we are not at the bottom of the Affix stack.
    """
    assert next_affix is None, "RepyNetworkAPIWrapper initialized with next_affix='" + str(next_affix) + "' (not None), implying it is not at the bottom of the Affix stack."

    # Save references to the Repy network API calls of the outer scope
    self.getmyip = getmyip
    self.gethostbyname = gethostbyname
    self.sendmessage = sendmessage
    self.listenformessage = listenformessage
    self.openconnection = openconnection
    self.listenforconnection = listenforconnection

  def get_advertisement_string(self):
    """
    RepyNetworkAPIWrapper is implicitly there at the bottom of 
    the stack. We don't advertise.
    """
    return ''

